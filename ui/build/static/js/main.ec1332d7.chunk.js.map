{"version":3,"sources":["components/pages/Product/ProductSection/ProductSection.module.scss","components/pages/Product/Filters/FilterWrapper/FilterWrapper.tsx","components/base_components/Chip/Chip.tsx","generated/serviceFactory.ts","Service/GQLClient.ts","components/base_components/ComponentDecorators/withClickTrack.tsx","generated/globalTypes.ts","Service/transformers/ProductTransformer.ts","Service/transformers/BrandTransformer.ts","Service/CatalogService.ts","components/pages/Product/Filters/Brand/Brand.tsx","clients/AnalyticsClient.ts","components/base_components/Button/Button.tsx","components/pages/Product/Filters/Filters.tsx","components/base_components/Card/Card.tsx","components/pages/Product/ProductSection/ProductCard/ProductCardDialog.tsx","components/pages/Product/ProductSection/ProductCard/ProductCard.tsx","components/pages/Product/ProductSection/ProductSection.tsx","Service/AuthenticationService.ts","components/pages/Product/Product.tsx","components/pages/FourOhFour.tsx","components/pages/Account/Account.tsx","Service/HttpService.ts","env.ts","components/modules/LoginForm/LoginForm.tsx","components/pages/Login/Login.tsx","App.tsx","serviceWorker.ts","index.tsx","components/base_components/Card/Card.module.scss","components/modules/LoginForm/LoginForm.module.scss","components/pages/Product/Filters/Filters.module.scss","components/pages/Product/Filters/FilterWrapper/FilterWrapper.module.scss","components/pages/Product/Filters/Brand/Brand.module.scss","components/pages/Product/ProductSection/ProductCard/ProductCardDialog.module.scss","components/base_components/Button/Button.module.scss","components/pages/Product/ProductSection/ProductCard/ProductCard.module.scss","App.module.scss","components/base_components/Chip/Chip.module.scss"],"names":["module","exports","FilterWrapper","React","memo","title","content","openContentForId","id","open","onClose","className","styles","onClick","classNames","Chip","name","onSelect","onRemove","gqlService","Component","LIMIT","fetchFiltersQuery","gql","fetchProductsQuery","likeProductMutation","client","ApolloClient","link","createHttpLink","uri","credentials","cache","InMemoryCache","defaultOptions","query","fetchPolicy","getGQLClient","fetchFilters","options","watchfetchFilters","watchQuery","fetchProducts","variables","watchfetchProducts","likeProduct","mutate","mutation","transformPrices","prices","reduce","acc","price","amount","push","url","getURLForSite","site","currency","undefined","ProductTransformer","products","next","Price","length","BrandTransformer","brands","sort","a","b","localeCompare","CatalogService","brandIds","pageInfo","service","data","catalog","filters","brand","productId","liked","then","res","success","e","Brand","selectedId","useState","setBrands","search","setSearch","clearSearch","useEffect","filteredItems","useMemo","filter","toLocaleLowerCase","includes","onSearch","debounce","input","console","log","onChange","useCallback","event","target","value","SearchOutlined","InputBase","placeholder","inputProps","inputComponent","map","key","analytics","Analytics","app","plugins","AnalyticsClient","logPageView","page","logClick","eventName","extraData","track","Button","rounded","filled","ariaLabel","children","aria-label","Filters","setOpenContainerId","isOpen","Card","onCardClick","href","imgURL","subHeader","footer","style","backgroundImage","Transition","forwardRef","props","ref","Slide","direction","ProductCardDialog","product","handleClose","items","index","ListItem","window","button","ListItemText","primary","secondary","Dialog","aria-labelledby","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","color","Typography","variant","List","Divider","ProductCard","showLikeIcon","dialogOpen","setDialogOpen","isLiked","setIsLiked","likeIcon","stopPropagation","ResponseType","ProductSection","setProducts","isLoggedIn","setIsLoggedIn","CookieMonster","getCookie","CookieType","ACCESS_TOKEN","limit","FIFTY","ProductPage","pageId","FourOhFour","AccountPage","onUnauthenticated","location","HttpService","fetch","method","headers","response","handleResponse","body","JSON","stringify","json","responseObj","statusCode","status","ENV","authServiceURI","process","JWT_PRIVATE_KEY","AuthenticationService","login","username","password","post","SUCCESS","message","validateToken","accessToken","isValid","LoginForm","submitting","error","onLogin","showPassword","setShowPassword","setUsername","setPassword","onShowPasswordClick","onSubmit","disabledSubmit","type","disabled","CircularProgress","height","width","Login","history","setSubmitting","setErrorMessage","getErrorMessage","catch","finally","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec1332d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductSection_root__1i3xl\"};","import React, { ReactElement } from 'react';\nimport styles from './FilterWrapper.module.scss';\nimport classNames from 'classnames';\n\nexport const FilterWrapper: React.FC<{\n  title: string;\n  id: string;\n  open: boolean;\n  content: ReactElement;\n  openContentForId: (id: string) => void;\n  onClose: () => void;\n}> = React.memo(({ title, content, openContentForId, id, open, onClose }) => {\n  const onOpen = () => {\n    openContentForId(id);\n  };\n\n  return (\n    <div className={styles['root']}>\n      <div\n        onClick={open ? onClose : onOpen}\n        className={classNames(styles['titleContainer'], {\n          [styles['open']]: open,\n        })}\n      >\n        {title}\n      </div>\n      {open && (\n        <div className={styles['filterContentContainer']}>{content}</div>\n      )}\n    </div>\n  );\n});\n","import React from 'react';\nimport styles from './Chip.module.scss';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nexport const Chip: React.FC<{\n  name: string;\n  onSelect?: () => void;\n  onRemove?: () => void;\n}> = ({ name, onSelect, onRemove }) => {\n  return (\n    <div className={styles['root']} onClick={onSelect}>\n      {onRemove && (\n        <span onClick={onRemove}>\n          <ClearIcon />{' '}\n        </span>\n      )}\n      <span>{name}</span>\n    </div>\n  );\n};\n","/* tslint:disable */\n// This file was automatically generated and should not be edited.\nimport ApolloClient, { QueryOptions, ApolloQueryResult, ObservableQuery, MutationOptions } from 'apollo-client';\nimport gql from 'graphql-tag';\nimport { FetchResult } from \"apollo-link\";\n\nimport { fetchFilters } from './fetchFilters'\nimport { fetchProducts, fetchProductsVariables } from './fetchProducts'\nimport { likeProduct, likeProductVariables } from './likeProduct'\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nexport interface GqlService {\n  \n    fetchFilters: ( options?: Omit<QueryOptions, 'query' | 'variables'>) => Promise<ApolloQueryResult<fetchFilters>>;\n    watchfetchFilters: ( options?: Omit<QueryOptions, 'query' | 'variables'>) => ObservableQuery<fetchFilters>;\n\n    fetchProducts: (variables: fetchProductsVariables, options?: Omit<QueryOptions<fetchProductsVariables>, 'query' | 'variables'>) => Promise<ApolloQueryResult<fetchProducts>>;\n    watchfetchProducts: (variables: fetchProductsVariables, options?: Omit<QueryOptions<fetchProductsVariables>, 'query' | 'variables'>) => ObservableQuery<fetchProducts, fetchProductsVariables>;\n\n  \n    likeProduct: (variables: likeProductVariables, options?: Omit<MutationOptions<likeProduct, likeProductVariables>, 'mutation' | 'variables'>) => Promise<FetchResult<likeProduct>>;\n\n}\n\nexport function createService(client: ApolloClient<any>) : GqlService {\n  return {\n    \n    fetchFilters: ( options: Omit<QueryOptions, 'query' | 'variables'> = {}) => {\n      return client.query<fetchFilters>({\n        ...options,\n        query: fetchFiltersQuery,\n        \n      });\n    },\n    watchfetchFilters: ( options: Omit<QueryOptions, 'query' | 'variables'> = {}) => {\n      return client.watchQuery<fetchFilters>({\n        ...options,\n        query: fetchFiltersQuery,\n        \n      });\n    },\n\n    fetchProducts: (variables: fetchProductsVariables, options: Omit<QueryOptions<fetchProductsVariables>, 'query' | 'variables'> = {}) => {\n      return client.query<fetchProducts, fetchProductsVariables>({\n        ...options,\n        query: fetchProductsQuery,\n        variables\n      });\n    },\n    watchfetchProducts: (variables: fetchProductsVariables, options: Omit<QueryOptions<fetchProductsVariables>, 'query' | 'variables'> = {}) => {\n      return client.watchQuery<fetchProducts, fetchProductsVariables>({\n        ...options,\n        query: fetchProductsQuery,\n        variables\n      });\n    },\n\n    \n    likeProduct: (variables: likeProductVariables, options: Omit<MutationOptions<likeProduct, likeProductVariables>, 'mutation' | 'variables'> = {}) => {\n      return client.mutate<likeProduct, likeProductVariables>({\n        ...options,\n        mutation: likeProductMutation,\n        variables\n      });\n    },\n  \n  }\n}\n\n\n  export const fetchFiltersQuery = gql`query fetchFilters{catalog{__typename filters{__typename brand{__typename id name}}}}`\n  \n  export const fetchProductsQuery = gql`query fetchProducts($brandIds:[String!],$pageInfo:PaginationInput){catalog{__typename products(input:{pageInfo:$pageInfo,filters:{brandIds:$brandIds}}){Price{__typename amount currency site url}__typename id name}}}`\n  \n  export const likeProductMutation = gql`mutation likeProduct($liked:Boolean!,$productId:String!){catalog{__typename likeProduct(input:{productId:$productId,liked:$liked}){__typename success}}}`","import { ApolloClient, DefaultOptions } from 'apollo-client';\nimport { createService, GqlService } from '../generated/serviceFactory';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst defaultOptions: DefaultOptions = {\n  query: {\n    fetchPolicy: 'no-cache',\n  },\n};\n\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: '/gql-gateway/graphql',\n    credentials: 'include',\n  }),\n  cache: new InMemoryCache(),\n  defaultOptions,\n});\n\nlet gqlService: GqlService;\n\nexport const getGQLClient = (): GqlService => {\n  if (!gqlService) {\n    gqlService = createService(client);\n  }\n\n  return gqlService;\n};\n","import React from 'react';\nimport { AnalyticsClient } from '../../../clients/AnalyticsClient';\n\ninterface WithClickTrackProps {\n  clickEventName: string;\n}\n\ninterface ClickProps {\n  onClick?: () => void;\n}\n\nconst logClick = (eventName: string) => {\n  AnalyticsClient.logClick(eventName).then(() => {});\n};\n\nexport const withClickTrack = <P extends ClickProps>(\n  Component: React.ComponentType<P>\n) =>\n  class WithClickTrack extends React.Component<P & WithClickTrackProps> {\n    render() {\n      const { clickEventName, onClick, ...props } = this.props;\n      const handleClick = () => {\n        logClick(clickEventName);\n        if (onClick) {\n          onClick();\n        }\n      };\n      return <Component {...(props as P)} onClick={handleClick} />;\n    }\n  };\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum LIMIT {\n  FIFTY = \"FIFTY\",\n  FIVE_HUNDRED = \"FIVE_HUNDRED\",\n  ONE_HUNDRED = \"ONE_HUNDRED\",\n}\n\nexport interface PaginationInput {\n  limit: LIMIT;\n  page: number;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import { Price, Product } from '../../types/dataTypes';\nimport {\n  fetchProducts_catalog_products,\n  fetchProducts_catalog_products_Price,\n} from '../../generated/fetchProducts';\n\nconst transform = (products: fetchProducts_catalog_products[]): Product[] => {\n  return products.reduce<Product[]>((acc, next) => {\n    const prices = transformPrices(next.Price);\n    if (prices.length > 0) {\n      acc.push({\n        id: next.id || '',\n        name: next.name || '',\n        prices: prices,\n      });\n    }\n\n    return acc;\n  }, []);\n};\n\nconst transformPrices = (\n  prices: fetchProducts_catalog_products_Price[]\n): Price[] => {\n  return prices.reduce<Price[]>((acc, price) => {\n    if (price.amount) {\n      acc.push({\n        amount: price.amount || '',\n        url: getURLForSite(price.site || ''),\n        site: price.site || '',\n        currency: price.currency || undefined,\n      });\n    }\n    return acc;\n  }, []);\n};\n\nconst getURLForSite = (site: string) => {\n  switch (site) {\n    case 'HAVEN':\n      return 'https://havenshop.com/';\n    default:\n      return '';\n  }\n};\n\nexport const ProductTransformer = {\n  transform,\n};\n","import {  Brand } from '../../types/dataTypes';\nimport { fetchFilters_catalog_filters_brand } from '../../generated/fetchFilters';\n\nconst transform = (brands: fetchFilters_catalog_filters_brand[]): Brand[] => {\n  return brands.reduce<Brand[]>((acc, next) => {\n    acc.push({\n      name: next.name || '',\n      id: next.id || '',\n    });\n    return acc;\n  }, []).sort(((a, b) => a.name.localeCompare(b.name)));\n};\n\nexport const BrandTransformer = {\n  transform,\n};\n","import { Brand, Product } from '../types/dataTypes';\nimport { getGQLClient } from './GQLClient';\nimport { ProductTransformer } from './transformers/ProductTransformer';\nimport { BrandTransformer } from './transformers/BrandTransformer';\nimport { PaginationInput } from '../generated/globalTypes';\nimport { likeProduct as LikeProductResponse } from '../generated/likeProduct';\nimport { FetchResult } from 'apollo-link';\n\nconst fetchProducts = async (\n  brandIds?: string[],\n  pageInfo?: PaginationInput\n): Promise<Product[]> => {\n  const service = getGQLClient();\n  try {\n    const products = await service.fetchProducts({ brandIds, pageInfo });\n    return ProductTransformer.transform(products.data.catalog.products);\n  } catch (e) {\n    return [];\n  }\n};\n\nconst fetchFilters = async (brandIds?: string[]): Promise<Brand[]> => {\n  const service = getGQLClient();\n  try {\n    const products = await service.fetchFilters({});\n    const filters = products.data.catalog.filters;\n    return BrandTransformer.transform(filters ? filters.brand : []);\n  } catch (e) {\n    return [];\n  }\n};\n\nconst likeProduct = (productId: string, liked: boolean): void => {\n  const service = getGQLClient();\n  try {\n    service\n      .likeProduct({ productId, liked })\n      .then((res: FetchResult<LikeProductResponse>) => {\n        if (\n          !(\n            res.data &&\n            res.data.catalog.likeProduct &&\n            res.data.catalog.likeProduct.success\n          )\n        ) {\n        }\n      });\n  } catch (e) {}\n};\n\nconst CatalogService = {\n  fetchProducts,\n  fetchFilters,\n  likeProduct,\n};\n\nexport default CatalogService;\n","import React from 'react';\nimport { FilterWrapper } from '../FilterWrapper/FilterWrapper';\nimport { Chip } from '../../../../base_components/Chip/Chip';\nimport styles from './Brand.module.scss';\nimport { Brand as IBrand } from '../../../../../types/dataTypes';\nimport CatalogService from '../../../../../Service/CatalogService';\nimport { InputBase } from '@material-ui/core';\nimport { SearchOutlined } from '@material-ui/icons';\nimport { debounce } from 'lodash';\n\nexport const Brand: React.FC<{\n  id: string;\n  selectedId: string;\n  openContentForId: (id: string) => void;\n  onClose: () => void;\n}> = React.memo(({ id, openContentForId, selectedId, onClose }) => {\n  const [brands, setBrands] = React.useState<IBrand[]>([]);\n  const [search, setSearch] = React.useState<string | undefined>(undefined);\n\n  const clearSearch = () => {\n    setSearch(undefined);\n  };\n\n  React.useEffect(() => {\n    CatalogService.fetchFilters().then(res => {\n      setBrands(res);\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (selectedId !== id) {\n      clearSearch();\n    }\n    // eslint-disable-next-line\n  }, [selectedId]);\n\n  const filteredItems = React.useMemo(() => {\n    if (!search) {\n      return brands;\n    }\n    return brands.filter(brand =>\n      brand.name.toLocaleLowerCase().includes(search)\n    );\n  }, [search, brands]);\n\n  const onSearch = debounce((input: string) => {\n    console.log(input);\n    if (!input || input.length === 0) {\n      clearSearch();\n    } else {\n      setSearch(input);\n    }\n  }, 300);\n\n  const onChange = React.useCallback((event: any) => {\n    onSearch(event.target.value);\n    // eslint-disable-next-line\n  }, []);\n\n  const content = (\n    <div className={styles['brandSection']}>\n      <div className={styles['search']}>\n        <div className={styles['searchIcon']}>\n          <SearchOutlined />\n        </div>\n        <InputBase\n          id={'brand-search'}\n          onChange={onChange}\n          placeholder=\"Search…\"\n          inputProps={{ 'aria-label': 'search' }}\n          inputComponent={'input'}\n        />\n      </div>\n      {filteredItems.map(brand => (\n        <Chip name={brand.name} key={brand.id} />\n      ))}\n    </div>\n  );\n  return (\n    <FilterWrapper\n      title={'Brand'}\n      content={content}\n      openContentForId={openContentForId}\n      open={id === selectedId}\n      id={id}\n      onClose={onClose}\n    />\n  );\n});\n","import Analytics from 'analytics';\n\nconst analytics = Analytics({\n  app: 'catalog-ui',\n  plugins: [],\n});\n\nconst logPageView = async (): Promise<void> => {\n  await analytics.page();\n};\n\nconst logClick = async (eventName: string, extraData?: any): Promise<void> => {\n  await analytics.track(`${eventName}-click`, extraData);\n};\n\nexport const AnalyticsClient = {\n  logPageView,\n  logClick,\n};\n","import React from 'react';\nimport styles from './Button.module.scss';\nimport classNames from 'classnames';\nimport { withClickTrack } from '../ComponentDecorators/withClickTrack';\n\nexport const Button: React.FC<{\n  disabled?: boolean;\n  onClick?: () => void;\n  rounded?: boolean;\n  filled?: boolean;\n  ariaLabel?: string;\n}> = React.memo(\n  ({ onClick, rounded = false, filled = false, ariaLabel, children }) => {\n    return (\n      <button\n        aria-label={ariaLabel}\n        className={classNames(styles['root'], { [styles['filled']]: filled })}\n        onClick={onClick}\n      >\n        {children}\n      </button>\n    );\n  }\n);\n\nexport const TrackingButton = withClickTrack(Button);\n","import React, { useState } from 'react';\nimport styles from './Filters.module.scss';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { Brand } from './Brand/Brand';\nimport classNames from 'classnames';\nimport { Button } from '../../../base_components/Button/Button';\n\nexport const Filters: React.FC = React.memo(() => {\n  const [selectedId, setOpenContainerId] = useState<string>('');\n  const onClose = () => setOpenContainerId('');\n\n  const isOpen = selectedId !== '';\n  return (\n    <div className={styles['root']}>\n      <div\n        className={classNames(styles['icon'], {\n          [styles['open']]: isOpen,\n        })}\n        onClick={isOpen ? onClose : undefined}\n      >\n        {isOpen ? <ClearIcon /> : <FilterListIcon />}\n      </div>\n      <Brand\n        id={'brand'}\n        selectedId={selectedId}\n        openContentForId={setOpenContainerId}\n        onClose={onClose}\n      />\n      <div>\n        <div className={styles['buttonContainer']}>\n          <Button ariaLabel={'apply-filter-button'}>Apply </Button>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { ReactElement } from 'react';\nimport styles from './Card.module.scss';\n\nexport const Card: React.FC<{\n  footer?: ReactElement;\n  href?: string;\n  onCardClick?: () => void;\n  imgURL?: string;\n  subHeader?: ReactElement;\n  title: string;\n}> = ({ onCardClick, href, imgURL, title, subHeader, footer }) => {\n  return (\n    <div className={styles['root']} onClick={onCardClick}>\n      <figure className={styles['imageContainer']}>\n        <div\n          className={styles['image']}\n          style={{\n            backgroundImage:\n              'url(https://img.ssensemedia.com/images/b_white,c_lpad,g_south,h_706,w_470/c_scale,h_280/f_auto,dpr_2.0/201404M202014_1/versace-red-biggie-sunglasses-hoodie.jpg)',\n          }}\n        />\n      </figure>\n      <div className={styles['textContainer']}>\n        <div className={styles['titleContainer']}>\n          <h3>{title}</h3>\n          {subHeader}\n        </div>\n        <div className={styles['cardFooter']}>{footer}</div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './ProductCardDialog.module.scss';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Product } from '../../../../../types/dataTypes';\nimport { Slide } from '@material-ui/core';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst Transition = React.forwardRef<unknown, TransitionProps>((props, ref) => (\n  //@ts-ignore\n  <Slide direction=\"up\" ref={ref} {...props} />\n));\n\nexport const ProductCardDialog: React.FC<{\n  product: Product;\n  open: boolean;\n  handleClose: () => void;\n}> = React.memo(({ product, open, handleClose }) => {\n  const items = product.prices.map((price, index) => {\n    return (\n      <ListItem onClick={() => window.open(price.url)} button key={index}>\n        <ListItemText primary={price.amount} secondary={price.site} />\n      </ListItem>\n    );\n  });\n  return (\n    <Dialog\n      aria-labelledby={'price-aggregate-dialogue'}\n      className={styles['root']}\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar className={styles['appBar']}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={styles['title']}>\n            {product.name}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <List>\n        <Divider />\n        {items}\n      </List>\n    </Dialog>\n  );\n});\n","import React from 'react';\nimport { Card } from '../../../../base_components/Card/Card';\nimport { Product } from '../../../../../types/dataTypes';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport styles from './ProductCard.module.scss';\nimport { ProductCardDialog } from './ProductCardDialog';\nimport CatalogService from '../../../../../Service/CatalogService';\n\nexport const ProductCard: React.FC<{ product: Product, showLikeIcon?: boolean }> = React.memo(\n  ({ product, showLikeIcon = false }) => {\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [isLiked, setIsLiked] = React.useState(product.isLiked || false);\n    const handleClickOpen = () => {\n      setDialogOpen(true);\n    };\n\n    const handleClose = () => {\n      setDialogOpen(false);\n    };\n\n    const likeProduct = (e: React.MouseEvent) => {\n      e.stopPropagation();\n      setIsLiked(true);\n      CatalogService.likeProduct(product.id, true);\n    };\n\n    const unlikeProduct = (e: React.MouseEvent) => {\n      e.stopPropagation();\n      setIsLiked(false);\n      CatalogService.likeProduct(product.id, false);\n    };\n\n    const likeIcon = isLiked ? (\n      <FavoriteIcon aria-label={'unlike-icon'} onClick={unlikeProduct} />\n    ) : (\n      <FavoriteBorderIcon aria-label={'like-icon'} onClick={likeProduct} />\n    );\n    const subHeader = (\n      <div className={styles['subHeader']}>\n        <h4>Brand</h4>\n        <div>\n          {product.prices.length > 1\n            ? `Found on ${product.prices.length} sites`\n            : 'Found on 1 site'}\n        </div>\n      </div>\n    );\n    const footer = (\n      <div className={styles['footer']}>\n        <span>{product.prices[0].amount} </span>\n        {showLikeIcon && likeIcon}\n      </div>\n    );\n    return (\n      <>\n        <Card\n          title={product.name}\n          footer={footer}\n          subHeader={subHeader}\n          onCardClick={handleClickOpen}\n        />\n        <ProductCardDialog\n          product={product}\n          open={dialogOpen}\n          handleClose={handleClose}\n        />\n      </>\n    );\n  }\n);\n","import React from 'react';\nimport { Product } from '../../../../types/dataTypes';\nimport CatalogService from '../../../../Service/CatalogService';\nimport { ProductCard } from './ProductCard/ProductCard';\nimport styles from './ProductSection.module.scss';\nimport { LIMIT } from '../../../../generated/globalTypes';\nimport { CookieMonster, CookieType } from '@rross_llc/component-lib';\n\nexport const ProductSection: React.FC = React.memo(() => {\n  const [products, setProducts] = React.useState<Product[]>([]);\n  const [page] = React.useState<number>(1);\n  const [isLoggedIn, setIsLoggedIn] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const token: string = CookieMonster.getCookie(CookieType.ACCESS_TOKEN);\n    if (!token) {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    CatalogService.fetchProducts(undefined, {\n      page,\n      limit: LIMIT.FIFTY,\n    }).then(res => {\n      setProducts(res);\n    });\n  }, []);\n\n  return (\n    <div className={styles['root']}>\n      {products.map(product => (\n        <ProductCard key={`${product.name}_${product.id}`} product={product} showLikeIcon={isLoggedIn}/>\n      ))}\n    </div>\n  );\n});\n","import { HttpService } from './HttpService';\nimport {UserInfo} from \"./service.types\";\nimport {ENV} from \"../env\";\n\n\nconst authServiceURI = ENV.AUTHENTICATION_URL;\nexport enum ResponseType {\n  SUCCESS,\n}\n\nexport type LoginResp =\n  | ResponseType\n  | {\n      status: number;\n      message: string;\n    };\n\nexport interface ValidateTokenResponse {\n  isValid: boolean;\n  user?: UserInfo;\n}\n\nconst login = async (\n  username: string,\n  password: string\n): Promise<LoginResp> => {\n  const res = await HttpService.post(`${authServiceURI}/login/user`, {\n    username,\n    password,\n  });\n\n  return res.statusCode === 200\n    ? ResponseType.SUCCESS\n    : { status: res.statusCode, message: '' };\n};\n\nconst validateToken = async (\n  accessToken: string\n): Promise<ValidateTokenResponse> => {\n  return { isValid: true };\n};\n\nexport const AuthenticationService = {\n  login,\n  validateToken,\n};\n","import React from 'react';\nimport { StandardPage } from '@rross_llc/component-lib';\nimport { Filters } from './Filters/Filters';\nimport { ProductSection } from './ProductSection/ProductSection';\n\nexport const ProductPage: React.FC = React.memo(() => {\n  return (\n    <StandardPage pageId={'products'}>\n      <Filters />\n      <ProductSection />\n    </StandardPage>\n  );\n});\n","import * as React from 'react';\nimport { StandardPage } from '@rross_llc/component-lib';\n\nexport class FourOhFour extends React.Component<{}> {\n  render() {\n    return (\n      <StandardPage pageId={''}>\n        <div> Page does not exist </div>\n      </StandardPage>\n    );\n  }\n}\n","import React from 'react';\nimport { Product } from '../../../types/dataTypes';\nimport { AuthenticatedPage } from '@rross_llc/component-lib';\n\ninterface AccountPageProps {\n  products: Product[];\n}\n\nexport const AccountPage: React.FC<{}> = React.memo(() => {\n  const onUnauthenticated = () => {\n    window.location.href = '/login';\n  };\n  return (\n    <AuthenticatedPage onUnauthenticated={onUnauthenticated} pageId={'account'}>\n      <div>Account Info</div>\n    </AuthenticatedPage>\n  );\n});\n","export interface ResponseEntity {\n  responseObj: any;\n  statusCode: number;\n  message?: string;\n}\n\nexport class HttpService {\n  public static async get(url: string): Promise<ResponseEntity> {\n    return fetch(url, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).then(\n      async (response: Response) => await HttpService.handleResponse(response)\n    );\n  }\n\n  public static async post(url: string, body: any): Promise<ResponseEntity> {\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    }).then(\n      async (response: Response) => await HttpService.handleResponse(response)\n    );\n  }\n\n  private static async handleResponse(\n    response: Response\n  ): Promise<ResponseEntity> {\n    const responseObj = await response.json();\n    return {\n      responseObj,\n      statusCode: response.status,\n    };\n  }\n}\n","export const ENV = {\n    AUTHENTICATION_URL: '/authentication-service',\n    JWT_PRIVATE_KEY: process.env.JWT_PRIVATE_KEY || 'shhhhhh',\n};","import React from 'react';\nimport styles from './LoginForm.module.scss';\nimport Typography from '@material-ui/core/Typography';\nimport { CircularProgress, InputBase } from '@material-ui/core';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport { Button } from '../../base_components/Button/Button';\n\nexport const LoginForm: React.FC<{\n  submitting: boolean;\n  error?: string;\n  onLogin: (username: string, password: string) => void;\n}> = ({ submitting, error, onLogin }) => {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [username, setUsername] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n\n  const onChange = React.useCallback(\n    (target: 'username' | 'password') => (event: any) => {\n      switch (target) {\n        case 'password':\n          setPassword(event.target.value);\n          break;\n        case 'username':\n          setUsername(event.target.value);\n      }\n    },\n    []\n  );\n\n  const onShowPasswordClick = React.useCallback(() => {\n    setShowPassword(!showPassword);\n  }, [showPassword]);\n\n  const onSubmit = React.useCallback(() => {\n    onLogin(username, password);\n  }, [username, password]);\n\n  const disabledSubmit = password.length === 0 || username.length === 0;\n  return (\n    <div className={styles['root']}>\n      <div className={styles['login-content']}>\n        {error && (\n          <Typography aria-label={'error-message'} className={styles['error']}>\n            {error}\n          </Typography>\n        )}\n        <h1>Login</h1>\n        <div className={styles['form-input']}>\n          <InputBase\n            id={'username'}\n            onChange={onChange('username')}\n            placeholder=\"Username\"\n            inputProps={{ 'aria-label': 'username' }}\n            inputComponent={'input'}\n          />\n          <div className={styles['password-input']}>\n            <InputBase\n              id={'password'}\n              onChange={onChange('password')}\n              placeholder=\"Password\"\n              inputProps={{ 'aria-label': 'password' }}\n              inputComponent={'input'}\n              type={showPassword ? 'text' : 'password'}\n              value={password}\n            />\n            {!showPassword ? (\n              <VisibilityOutlinedIcon onClick={onShowPasswordClick} />\n            ) : (\n              <VisibilityOffOutlinedIcon onClick={onShowPasswordClick} />\n            )}\n          </div>\n        </div>\n        <div>\n          <Button\n            onClick={disabledSubmit ? () => {} : onSubmit}\n            disabled={disabledSubmit}\n          >\n            {submitting ? (\n              <CircularProgress style={{ height: '20px', width: '20px' }} />\n            ) : (\n              'Submit'\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  AuthenticationService,\n  LoginResp,\n  ResponseType,\n} from '../../../Service/AuthenticationService';\nimport { LoginForm } from '../../modules/LoginForm/LoginForm';\n\nexport const Login: React.FC<{ history: any }> = ({ history }) => {\n  const { push } = history;\n  const [submitting, setSubmitting] = React.useState(false);\n  const [error, setErrorMessage] = React.useState<string | undefined>();\n  const routeTo = (path: string) => {\n    push(path);\n  };\n\n  const getErrorMessage = (status?: number) => {\n    switch (status) {\n      case 401:\n        return 'The username or password specified is not valid';\n      default:\n        return 'Sorry and error occurred. Please try again.';\n    }\n  };\n\n  const onLogin = (username: string, password: string) => {\n    if (password.length !== 0 && username.length !== 0) {\n      setSubmitting(true);\n      AuthenticationService.login(username, password)\n        .then((res: LoginResp) => {\n          if (res !== ResponseType.SUCCESS) {\n            setErrorMessage(getErrorMessage(res.status));\n          } else {\n            routeTo('/');\n          }\n        })\n        .catch(e => setErrorMessage(e.message))\n        .finally(() => setSubmitting(false));\n    }\n  };\n\n  return <LoginForm submitting={submitting} onLogin={onLogin} error={error} />;\n};\n","import React from 'react';\nimport styles from './App.module.scss';\nimport '@rross_llc/component-lib/dist/css/main.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { ProductPage } from './components/pages/Product/Product';\nimport { FourOhFour } from './components/pages/FourOhFour';\nimport { AccountPage } from './components/pages/Account/Account';\nimport {Login} from \"./components/pages/Login/Login\";\n\nconst App: React.FC = () => {\n  return (\n    <div className={styles['App']}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={'/'} component={ProductPage} />\n          <Route exact path={'/login'} component={Login} />\n          <Route exact path={'/account'} component={AccountPage} />\n          <Route component={FourOhFour} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageContainer\":\"Card_imageContainer__2oJrr\",\"image\":\"Card_image__17Gg9\",\"textContainer\":\"Card_textContainer__1-LEa\",\"root\":\"Card_root__k87Sv\",\"cardFooter\":\"Card_cardFooter__1Dc5q\",\"titleContainer\":\"Card_titleContainer__28Rqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-input\":\"LoginForm_form-input__2aYBB\",\"root\":\"LoginForm_root__30wIi\",\"error\":\"LoginForm_error__2Ukga\",\"title\":\"LoginForm_title__3rPrx\",\"button\":\"LoginForm_button__QNtMT\",\"login-content\":\"LoginForm_login-content__1Adbz\",\"password-input\":\"LoginForm_password-input__2Dzsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Filters_root__z8DTz\",\"icon\":\"Filters_icon__JQq9U\",\"open\":\"Filters_open__1P2D6\",\"buttonContainer\":\"Filters_buttonContainer__3G7r8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FilterWrapper_root__2aGQq\",\"titleContainer\":\"FilterWrapper_titleContainer__1h1cQ\",\"open\":\"FilterWrapper_open__1t9mv\",\"filterContentContainer\":\"FilterWrapper_filterContentContainer__1dqnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popularSection\":\"Brand_popularSection__1jUBs\",\"contentContainer\":\"Brand_contentContainer__2WPeK\",\"brandSection\":\"Brand_brandSection__2x5cq\",\"search\":\"Brand_search__24Tt2\",\"searchIcon\":\"Brand_searchIcon__u-Vsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ProductCardDialog_root__3TgF4\",\"appBar\":\"ProductCardDialog_appBar__RKJjZ\",\"title\":\"ProductCardDialog_title__1DD_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__aaXK7\",\"filled\":\"Button_filled__2R5yO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"ProductCard_footer__1KBdV\",\"subHeader\":\"ProductCard_subHeader__2MXx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"App-logo\":\"App_App-logo__1GLNd\",\"App-logo-spin\":\"App_App-logo-spin__1EbLw\",\"App-header\":\"App_App-header__3nnPn\",\"App-link\":\"App_App-link__TRj1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Chip_root__kd-ex\"};"],"sourceRoot":""}